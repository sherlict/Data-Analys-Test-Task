import pandas as pd
import numpy as np

df = pd.read_csv('Test_Task.csv',thousands=' ', decimal=',')

# Replacing all non-numeric characters and converting values to numeric format (floating point data type)
df['Price'] = df['Price'].replace('[\D]', '', regex=True).astype(float)

df['Shipping'] = df['Shipping'].replace('[\D]', '', regex=True).astype(float)

df['quantity_sold'] = df['quantity_sold'].replace('[\D]', '', regex=True).astype(float)

df['Quantity'] = df['Quantity'].replace('[\D]', '', regex=True).astype(int)

# Comma-separate values, convert to numbers, and create a new column
df['Stock_History'] = df['Stock_History'].apply(lambda x: [int(i.replace(" ", "").replace("\xa0", "")) for i in x.split(',')])

# Create a second column with an offset one element back
df['Shifted_Stock_History'] = df['Stock_History'].apply(lambda x: x[1:] + [None])

# Calculate the sum of positive differences
df['Quantity_sold'] = df.apply(lambda row: sum([(y - x) if (y is not None and x is not None and y > x) else 0 for x, y in zip(row['Shifted_Stock_History'], row['Stock_History'])]), axis=1)

# Custom output option for pandas DataFrame, changing the output format for floating point numeric values.
pd.set_option('display.float_format', '{:,.2f}'.format)

df['Net_price'] = df['Price'] - df['Shipping']

df['Sales_amount'] = df['Net_price'] * df['quantity_sold']

df['Count_high_demand'] = df['Stock_History'].apply(lambda x: x.count(0))

df['Rank_quantity_sold'] = df['Quantity_sold'].apply(lambda x: '1' if x / df['Quantity_sold'].max() * 100 > 70
                                                     else ('2' if 30 <= x / df['Quantity_sold'].max() * 100 <= 70
                                                           else '3'))
df['Rank_count_orders'] = df['Count_orders'].apply(lambda x: '1' if x / df['Count_orders'].max() * 100 > 70
                                                   else ('2' if 30 <= x / df['Count_orders'].max() * 100 <= 70
                                                         else '3'))
df['Rank_sales_amount'] = df['Sales_amount'].apply(lambda x: '1' if x / df['Sales_amount'].max() * 100 > 70
                                                   else ('2' if 30 <= x / df['Sales_amount'].max() * 100 <= 70
                                                         else '3'))
df['Rank_high_demand'] = df['Count_high_demand'].apply(lambda x: '1' if x / df['Count_high_demand'].max() * 100 > 70
                                                       else ('2' if 30 <= x / df['Count_high_demand'].max() * 100 <= 70
                                                             else '3'))
df['Total_rank'] = df['Rank_quantity_sold'] + df['Rank_count_orders'] + df['Rank_sales_amount'] + df['Rank_high_demand']

selected_columns = ['SKU', 'Total_rank', 'Price', 'Shipping', 'Net_price', 'Quantity', 'Quantity_sold']

#sorted_df = df.sort_values(by='Total_rank', ascending=True)[selected_columns]

sorted_df = df[(df['Quantity'] > 0) & (df['Net_price'] > 0)].sort_values(by='Total_rank', ascending=True)[selected_columns]

print(sorted_df.head().to_string(index=False))
